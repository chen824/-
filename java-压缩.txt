1、哈夫曼算法
	A	90	10
   	B	80	30
	C	70	30
	D	60	20
	E		5

	
	

	if(){
		A
	}else if(){
		B
	}else if(){
		C
	}else if(){
		D
	}else{
		E
	}
	
	5*4 +  20*4 +50*3 + 40*2 +10*1 = 
	
	5*4 + 20*4 + 10*3 + 40*2 + 50 *1 = 
	
	if(){
		C
	}else if(){
		B
	}else if(){
		A
	}else if(){
		D
	}else{
		E
	}
	
	权值：每一个节点出现的频率
	带权路径：权值*路径
	哈夫曼树：带权路径和最小的二叉树。

	
	实现：
		字符串
		根据字符串，统计每一个字符出现的次数。
		节点 - 权值 
		1、根据权值对所有的节点排序。
		2、取出权值最小的两个节点，构建一个新节点。新节点加入之前节点，排序。
		3、重复2，直到剩余一个节点。

	哈夫曼编码：
		
	
	




















2、文件操作